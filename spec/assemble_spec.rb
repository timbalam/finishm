require File.expand_path(File.dirname(__FILE__) + '/spec_helper')
require 'bio-commandeer'

#Bio::Log::CLI.logger('stderr'); Bio::Log::CLI.trace('debug'); log = Bio::Log::LoggerPlus.new('finishm'); Bio::Log::CLI.configure('finishm')

describe "FinishM assemble" do
  it 'should assemble something easy' do
    data_path = File.join(TEST_DATA_DIR,'explore','1')
    trails = nil
    Dir.chdir(data_path) do
      trails = Bio::Commandeer.run "#{FINISHM_SCRIPT_PATH} assemble --quiet --output-contigs /dev/stdout --assemble-from '1e' --fasta 2seqs.sammy.fa"#, :log => log
    end
    splits = trails.split("\n")
    splits.length.should == 2

    splits[0].should == ">1e"
    splits[1][0..60].should == 'TATCCGGTCCCCCTAGAATGTTGATTCCTCCGTCTTCTGATTTCCGTTGGCGGTTCGTATC'
    splits[1].length.should == 613
  end

  it 'should output a pathspec' do
    data_path = File.join(TEST_DATA_DIR,'explore','1')
    trails = nil
    Dir.chdir(data_path) do
      trails = Bio::Commandeer.run "#{FINISHM_SCRIPT_PATH} assemble --quiet --output-pathspec --output-contigs /dev/stdout --assemble-from '1e' --fasta 2seqs.sammy.fa"#, :log => log
    end
    splits = trails.split("\n")
    splits.length.should == 2

    splits[0].should == ">1e 1e"
    splits[1][0..60].should == 'TATCCGGTCCCCCTAGAATGTTGATTCCTCCGTCTTCTGATTTCCGTTGGCGGTTCGTATC'
    splits[1].length.should == 613
  end

  it 'should work when assembling the entire graph' do
    data_path = File.join(TEST_DATA_DIR,'explore','1')
    trails = nil
    Dir.chdir(data_path) do
      trails = Bio::Commandeer.run "#{FINISHM_SCRIPT_PATH} assemble --no-progressbar --quiet --output-pathspec --min-contig-length 0 --output-contigs /dev/stdout --fasta 2seqs.sammy.fa"#, :log => log
    end
    splits = trails.split("\n")

    splits[0].should == ">contig1 1s"
    splits[1][0..60].should == 'AGGGCAGATTCCCACGCGTTACGCACCCGTGCGCCACTAGACCCGAAGGTCTCGTTCGACT'
    splits[1].length.should == 613
  end

  it 'should not crash when recoherence kmer is given' do
    data_path = File.join(TEST_DATA_DIR,'explore','1')
    trails = nil
    Dir.chdir(data_path) do
      trails = Bio::Commandeer.run "#{FINISHM_SCRIPT_PATH} assemble --no-progressbar --assembly-kmer 7 --recoherence-kmer 51 --quiet --output-pathspec --output-contigs /dev/stdout --fasta 2seqs.sammy.fa"#, :log => log
    end
    # Not sure what is supposed to come out of here with such a short assembly-kmer, but just so long as it doesn't crash.
  end

  it 'should use recoherence' do
    trails = nil
    Dir.mktmpdir do |tmpdir|
      Dir.chdir(tmpdir) do
        cmd = "#{FINISHM_SCRIPT_PATH} assemble --no-progressbar --assembly-kmer 51 --recoherence-kmer 90 --quiet --output-contigs /dev/stdout --fasta-gz #{TEST_DATA_DIR}/gapfilling/6/reads.random1.fa.gz,#{TEST_DATA_DIR}/gapfilling/6/reads.random2.fa.gz"
        puts cmd
        trails = Bio::Commandeer.run cmd
      end
    end
    trails.should == '>contig1
GTGACGGTGGAGCCCACGCAACGACCCGAGGAGTGGCCGGGTTTACAGCAGCGGGGGGAGCTGGGCAAACCCTCAGTTGACCGGTTCTCACTTATCGGGTCAAAGGATTAGGCATAATAAGGAGAGTTAGAATGTCTTACCTACTTAAAAACGCCCGCAGCAAAGGGACTAACGATGTTTGAACGAGCTCCTGCGCCCATGTGCTGGGTAGGAAGTGCGACCGGGAATTGGTTTTGGATCCAGGCGGATGGGCACTAACCGGCGGTTAAACCACGGGGCTAGTCGCATTGTTACCTAGTGGGTTGAGCGCAACCAATGATGGGCCTCCGCCTCGCGACTCCTCTCGAGTACCTCCTATGTGGGGAGTGATAGGGATTCGGGAATGCCATTTTGACCCTGAGCTGTTGAAGGAACTTTGCAGACGCCCTCACGTATACCTATTAGGGGAACGGTGCTAGGTATTAGATATACTTCTGCCTAGACAATAGCAGCGGTTCTCAGCGCACCACTACCGCACGATAGCCACTCATGGATGCGTTATATCGTGTTCCAAGTCCAAGCGTTCTCCTCGGGTTAGTTCCCATCATAGATGCTGGTGGAGCTCAATCCGGCAGCATAATGAAAGGTTACCCGATGTGGCCTATGTGCGACCTCACTGGAAGGAAACGCAGACGAGGGTAAAAGGCCTCTGGGAGCCCCCCCGCGACTATGCGTGGCCGTGTTTCCTTCCTCTGCATAAGACCCGATCTGTTATTCCTTTAGAGTGCGCCAACCTGGAACTCGCCTCCGCCATCGTGTATCGGAACTAAACTCGCGAGTGTTTGAAACGAACATGATGTAGTTTTCAGGATACTTGATGCATACGCACACGTACTCGCATGCCAAGGTATAGATGCTCCCCGTATGAAGTCACGTGGCCTGATCGCACAGAAACATTTCGGTGGACAGCAGATTCGGAACGACCGCGCAGCGCCGTGAGAAAACGTCACTAAAATAAAAACCATAGGCAAGATATACGAAGCGTGGGTCATTCTACGGCATCAAACGTTTCTATTTGTCTTTCTCGGGCCTGGTACGTTAAAAAACCGGTGGCCACCCCGTATTCCGGTAAAGTCAACTCTGGGACGCAAATGCCGAACACGGTGATTACTCAAAATTTCGTGAGCAGACGCCTACGTTAGTTTGGTAATGAAATATATTTCGGGTCGGTTGTTGGTTTTGGCCACTTCAGATGCATACTGGCCCGACTATCCTATACATTGGAGATTTATCAATGCTTGCATCGGGAGCCCCGATTCGAGCGTATTGTTGGAACAACCATCGCCGCGTCCATAACCACTTGTCAGTTCTTCACATTGCGTTCGGAACGTTCACCCCTCAGGATTTGGGACAGTGTGAATTCGATTGTCTGAAGTGTTTTTAAGCAGGCCTCCAGGTCGCGTGTTTTACATGGGTGGCTCGGGCTGGGACTCCGTGCCGTAGTCGACGTCGACCGCAACTGATGAGCGTATACGGAGATATTACTCTGCGATTTCAAGAGAGCGCCCGGGTTAGGCTGTCGCTTCATAATGACAGTCTGTGCCGGAGAGGGCATGTTAGCCAGGCTAGACCTGCACGGGAACTCTTTAGAGTTAGGAGTAAATATGGAATGCGTAAAATCCTAAGATTGTGACTGTCTAATGACCTCGCGCTGCAAATGCGCATCACTAGTAATAGGGTGGGGATTCGGCAAAACCGATTGATCGTTGCAACGGTTCCCAACTCGAAAGTTCAAAAAATTCAACGAGCAGACTACCGCCATCACCTCCTTTACCTGGGGGAGCTCCCTAGCGGTCCCTAGATTGGGCACAATTGCGCGATGGAGGCCCCGGATGTTCTTGGAAACGCGTTGAACATCATTCATTTAATCTGGAAACTGTTAGACCTGGGCTACTATCCGTTTGTCAGTTCGGAAACTATATTTCATACAGGAATGAATAGGCCCCGATCACCTGCCCCG
>contig2
AGCACACCTTGCCCAGATGTGGCCGAAGCCGGGCGCCAGTAGACGGCACCCCTGTATACAGGTCCTCTGCGTCAACCAGGGAACCCCTCCATCGACCGGGGTCGCACACCTTTAATCATAAAAATTGTGTTGTGTAGCGCCTCTCTGGAAAGTAAAGTAACCGCTTTCCCCTGACCACGTGTGACGACCCCCCATTTGGCAAGAGCCCGAGGGACCCGCTGCGTATTATCTCCAACGTCGCAAGTCAGGCGCCTTATTCGGGTGCATCGATATGGCGTCCCCACTTTGAGGTTAGTAGCTTACCAAACCAGAGATACCGTCAAGACTATTCATTTCTCGGACACGTTTCATTTTGGACAGTGATGTGGGTCTGCAAATTCGGGTTTATTTACTTCCCACATGTGGACCTGTGCACTTCTTAGGTTGAAGCCAATGAACAAAGCCTCGTCACCGACGATGCTTACGTTTCTCACCTCGCGTTATTGATTGCCTTGTGCCTTGCGTAATCATAGTCGTCAATCAATGACTTAAGTTATTCCATCCAAATCCCGGGTCACCTCTTATGTAGACAGGAATCCCGCCAACTTTGTACAAAGGGGAACCGGCTAGGGACAATGGCCTCGATAGGAGCCTACCATCTGACTCTTTACAGGACGGTTGGCACGAACAGATGCGAATTTCTAATACCATGTTAATAGCCCTCTGGGGATCGCGCCGGCTACGTAATGGTCGCGGCTGGATGTTCCGGCTTAAAAGTTTGGCAACCTGTGGACTCAACGTCGCTTGTCAATCGGATCCCGGAAGCCCTATAACCTTTTGTCAGCTCTGAACTAACAGGCATGGTGGAGCTAAGCACTCATTAGCTTGCAATTATTACAGGATGATATGCCACAAGATCTACGAGTGATTTGAAGGCACACTCCCCGAGGTGGTACCGATGAAATAGGTGGTGCTATCGAAATATATTTCATTACCAAACTAACGTAGGCGTCTGCTCACGAAATTTTGAGTAATCACCGTGTTCGTGAGACCTTAAGGTCCGGGGCTACCAGAGCCGATGGATCGGAGCGCCCGAACAACGTGAAGGTGACTACGTTCTACCACGGTTGACTCGTACGTCGACTAGCAAATTCTTGGACTTTAGGGGCGAAAAAAGTTGGAATAATTCTTCTCGGCTTGGGTGATAGCTTTCCACCTAACCCTAAGGAGTGTAGTGCAATAGTGGATGTTATTCAGGTTGCAACTCTAGTTGGGCCCGGAACCATGCCGTAGAATGACCCACGCTTCGTATATCTTGCCTATGGTTTTTATTTTAGTGACGTTTTCTCGCTTTTACCCGGCTCGAAAAGCGTGGGGCCCGTTTAGACCGCGGGCGTCCGCTGGCCTATTGATCAGAGTTGTCTAGCGCGTCGAGGAGGGTGGCATGATTTACAGCTTCCGCCTGAGCAACGGACGGATGTGTCCGGGGTGTAACCCATCTATAAGCTATCGTCAGAGTTGTGATCCTAGTAGCTATTATAGCAAGGCTGTAGGGATCGTCGCGGGGACTGACCAATACGCACCCGTTCCCGAGGACGGGAATCCACCAGAGTTTGGGTCTTCTTTCGCCATTGGTTGCTACTGCCAACACTTCTGACCTGCGGGAGTCAGTAGGACCCCAGACTTAATAATCCGCCCACGGCGAAGGAGTATTCGTACACAATCAGAGGCGGCAGAGCGCTAGCGGGGCAGCGTCAGCGCCTGCGGCGCATTGAGTTGGCTGGCGACCAGAGGTTAAGCTTCGATGGTCGGCCCCTTGCAAGGCCCTTTAACAGTTTTAGGACACGCGTGCCTCAGCATTAGTAGTGTCACCTCCCGTCCACGTCCACCTTAGTGTTTTGCGCGCTGCCACGTAGTACTGCGCTTAGCTTCTTCTGGTGGAAACGGACCTGGATTACTAACAAAGATGGTGTAGCAAGACCCGCCAGGTCAATTCAATTTCGGCCGCATTCCACCGACGATTAGTTTGAAAGGGTTATAGGAGCCGAGATCTGCTCGGGGGGACTTACAGTCTACTTCATGATCCGTACGCAGCGGTAGGTATGGCGTTACAGAGTTGAATGAATTCTCAGCACCGATGAACGATG
'
  end

  it 'should output contig stats' do
    data_path = File.join(TEST_DATA_DIR,'explore','1')
    stats = nil
    Dir.chdir(data_path) do
      stats = Bio::Commandeer.run "#{FINISHM_SCRIPT_PATH} assemble --no-progressbar --min-contig-length 0 --quiet --output-pathspec --output-contigs /dev/null --output-contig-stats /dev/stdout --fasta 2seqs.sammy.fa"#, :log => log
    end
    #        +contig1 21.15370018975332
    #        +contig2 62.07488986784141
    #        +contig3 22.654135338345863
    #        +contig4 34.90963855421687
    # ...
    puts stats
    stats.match(/name\tcoverage\ncontig1\t21.15370018975332\ncontig2\t62.07488986784141\ncontig3\t22.654135338345863\n/).nil?.should == false
  end

  it 'should bubbly assemble' do
    trails = Bio::Commandeer.run "#{FINISHM_SCRIPT_PATH} assemble --bubbly --no-progressbar --quiet --output-contigs /dev/stdout --fasta-gz "+
      "#{TEST_DATA_DIR}/assembly/1_simple_bubble_uneven_coverage/reads_combined.fa.gz"
    #  --output-pathspec
    answer = <<EOF
>contig1
GACCCGCGTGAGCTCTTAAGTACCTAGACTTCACTCCCGGCTTTAGAGTAGTATCGGTACGGGACTCCCTGACCTAAGTT
AGGACGGCGTCCGCCGTAGAACGTGGATGATCTGAAGCATTTCGGAGCAGGCCCTAAGCGCGGCTCCTCTTCCATCGCAG
TCCAAACGCCATTTCAGTTAGTGCGCGCGAGCAGCTCCAGGAGAGCGCTCCGGTGAAACTATCCGTTTGTATACGTCTCC
TACCTGATTCCAGACCAACAAACGGTAACCCTAGCTAAGACTCGTTGCTGAGACCACATCAATCAAGGCGACAGGGAATA
GGAAGTTAGTCTCGAAATTAGCTACAGGGACGTACACCTATTACCGAGCCCACTCGCTAACTCTAACTAAGACTCCTGCG
CCACCGGCAAACATGTTGAACTTCTTATTTCGGCCGTCCAATTAAATCGTTCTTGGTGTGGCGACTACATTAAACATTAT
CACATGCCGGCATTTGTTCAACTTCTAGGGGCCCCGGAATTGGCCTGACCCTCTTAAGGCTGTTGCCGTACGATTGAATC
AGTAGTTGGTTGACGATAGCCCCCGGGGTACAGAGGCTCCTAGTCGCATTTATTTGAGTAACGCAGGCCCATGAAAGATG
GCCTTCGACAAAAAGTAATTAAGCACCGTATAATTTGTGGGTGATTTGCCGGAACATAACATTCCTACCTGACCGAGTCT
CTATTAACCAGCGGGCAGGTGACGAAATGCGCCACACTACTCCTCTGACAGCTGAGGATCACAGCCGAGATGTAAGTCTC
AGCAATAGGCAAAACCCGAATAGTTTTTGGGATATAGGAACTCCTTGCCTCTACCGTTTGCGCGCAGATGCCATAAGGTG
CACGCCATCTAACCGTCCTCGCCGTATCGTGTCTCTGGCGAGCTTTTAATGGCAACATAGAACTTACATTTATAACGCGC
ATAGGACCCATCATACCTGCCACTTTTGAAGGGGATCCACGTTTCCTAAATCAGAATACTGATTAATTAATTTACGGATG
TATACCCACAGTCTGTAGAAATAGAAAAGGTTGTAACGTGCATCCCGGCGACACTGGTAATGGTGCGTCTTGCTTCGGAG
GTTGATTTATTGTGCCCCCCGTCACACAGCATCCCTCCGACGTGTTAAGTTAGTAAGCAACATTAAAAAAAACTCACGCT
CGATCTTACGTATCTTCGAAGGACGGTATGGGATGGTAGGTCGCCTGCGGGGTACTGTGGCAACGCACGGATCTTAATAC
GGAGCTATCGCGTGTATACCGTACGGGAGAACTGCGGATTAGCTATAGCAAAAAACTACGGTGTCCCATTCGCCGTAAAG
TAACGCAGTAGGGAGGGGGGGCCGATCATGGTCCACAACCTAGGGCATGCCTCCTCGGTAAAACACTATCCCCAGAGTTG
TAAACTAGCCTGGGAGCAGGTACTTGAAGCACCTTGCATCTTTAACTTAGCTTACGATGGAGACTACCCACCCGATAATG
ACTGCTTTGGCGTGGACCTCTGGATGAAGAACGGACTTCCTTACCAGCGCGGAATTGTGGTTCATCTGGACCCAGTTCCG
ACCTGAGCATTCGGTTCGGCTAACGAATGTAAATCGGTCTGAAACAGTGATCCTCGCTGCCTATACGTTGACAGTGGTCA
AATACAACGTTAGTGGTTCTTTCTTACATCATTATCGTGCTAGCCCTGCGCTTCTCTTCCCAAATGGCTTCTAATCCTGT
ACCTGGAATCATTCTCTCAGCCCGGATCGAGTTCTGCCGGGATAACGCCGATTACGCATACTTACGTAAAAGACCAGAGG
ATTAGCACTGCGATAAGGCCGTAATGAAGGTAAGAGGGAAACAGATCATTTGGGTATATATCACAACTGTCGCCCCCTTT
AGCTGTGTAGTCATATGTCGCCAGTACGAAATATTATCCCAATGCAGTGTCCGGCCTTCGCATTTGTCACGGCATGCTTG
AAAGATAGCGGTGGGGTTGAGCAGCGTGGGCGCTCCTTCAGATCACCGCACTGTATGGCAGCTCGCTCCGGTAATAGTCT
GCACGAACCGACGCAACATCAGTATCGGGTACGATAGTTAAGAGATACGTGCAGTAGCATGCTCTCTTTGGCAGAGCGCC
CCCTCGAGCAATTTATGGCCCAAGACTCAACAGACAAGCATCGTGTGGCGATGAGTAACTATGCCAGACGAGTTGACTGG
TAGTTGTGACGCTCATTGTCTCAATCAATCGGTGGTCGTCACGGGACCAGACTGCCCCCATTTGGCTCGCTGTGAACCCG
AGACGTAATGTCAGGACTCTCTGGGGTCGTGGGAATCATCCAAGTACCCAACCCCCCGGAGTCATGGGCGCAACATCCGT
CTCAGAATGATTTTGAAGGAAGCTCTGGGAAGGTTCAATTAATGAACTGGTCGGCATAATTATTCATTCGTATCGGCTCG
ATCTGAGAGATGGATATGGAAAAATCAAGATAACGCCCATTTGACCGACCGTACCTTAAAGCAGACGCGAATTATAGCGA
GCGGTTATACCAGCAATAATTATGGGGGTAGACTTGTTCGTGTAGACAGCGTAATAATTCCGTCAGGTGCACTTTGCTGT
CTTAACCGGCCGGTAGTCGAGCGGACAGGTCCACCGCACTAGGTGGTGCTATTCGATGGTTTCATGCCACCACGCAAGGC
TAACACGGTCGCGCATATACATCCCGACAGACAAGAGTGGATGCTTCATTGATTGCTTGATAATCTCTTGTACAGGAGAT
TGTTGGCGTGTCATACCGATAAGATGCTGCCATACATAGGCAGACTGGGCCGGATTCTACAGTCGGTGGGCTGCAGCCGA
AGCTTAGTTGTGCAGGTCGTAGCGATAAGCGAGTCTTGTTTACGGTTAACCCCCGTCTCCTGCAACTATAACCGAGGGAA
TCGTGACTACCAAGAGCCCTATGAGATCCCTC
EOF
    answer = answer.gsub(/([ATGC])\n/,'\1')+"\n"
    trails.should == answer
  end

  it 'bubbly assembler should output pathspec' do
    command = "#{FINISHM_SCRIPT_PATH} assemble --output-pathspec --bubbly --no-progressbar --quiet --output-contigs /dev/stdout --fasta-gz "+
      "#{TEST_DATA_DIR}/assembly/1_simple_bubble_uneven_coverage/reads_combined.fa.gz"
    puts command
    trails = Bio::Commandeer.run command
    answer = <<EOF
>contig1 1s,2s,3s
GACCCGCGTGAGCTCTTAAGTACCTAGACTTCACTCCCGGCTTTAGAGTAGTATCGGTACGGGACTCCCTGACCTAAGTT
AGGACGGCGTCCGCCGTAGAACGTGGATGATCTGAAGCATTTCGGAGCAGGCCCTAAGCGCGGCTCCTCTTCCATCGCAG
TCCAAACGCCATTTCAGTTAGTGCGCGCGAGCAGCTCCAGGAGAGCGCTCCGGTGAAACTATCCGTTTGTATACGTCTCC
TACCTGATTCCAGACCAACAAACGGTAACCCTAGCTAAGACTCGTTGCTGAGACCACATCAATCAAGGCGACAGGGAATA
GGAAGTTAGTCTCGAAATTAGCTACAGGGACGTACACCTATTACCGAGCCCACTCGCTAACTCTAACTAAGACTCCTGCG
CCACCGGCAAACATGTTGAACTTCTTATTTCGGCCGTCCAATTAAATCGTTCTTGGTGTGGCGACTACATTAAACATTAT
CACATGCCGGCATTTGTTCAACTTCTAGGGGCCCCGGAATTGGCCTGACCCTCTTAAGGCTGTTGCCGTACGATTGAATC
AGTAGTTGGTTGACGATAGCCCCCGGGGTACAGAGGCTCCTAGTCGCATTTATTTGAGTAACGCAGGCCCATGAAAGATG
GCCTTCGACAAAAAGTAATTAAGCACCGTATAATTTGTGGGTGATTTGCCGGAACATAACATTCCTACCTGACCGAGTCT
CTATTAACCAGCGGGCAGGTGACGAAATGCGCCACACTACTCCTCTGACAGCTGAGGATCACAGCCGAGATGTAAGTCTC
AGCAATAGGCAAAACCCGAATAGTTTTTGGGATATAGGAACTCCTTGCCTCTACCGTTTGCGCGCAGATGCCATAAGGTG
CACGCCATCTAACCGTCCTCGCCGTATCGTGTCTCTGGCGAGCTTTTAATGGCAACATAGAACTTACATTTATAACGCGC
ATAGGACCCATCATACCTGCCACTTTTGAAGGGGATCCACGTTTCCTAAATCAGAATACTGATTAATTAATTTACGGATG
TATACCCACAGTCTGTAGAAATAGAAAAGGTTGTAACGTGCATCCCGGCGACACTGGTAATGGTGCGTCTTGCTTCGGAG
GTTGATTTATTGTGCCCCCCGTCACACAGCATCCCTCCGACGTGTTAAGTTAGTAAGCAACATTAAAAAAAACTCACGCT
CGATCTTACGTATCTTCGAAGGACGGTATGGGATGGTAGGTCGCCTGCGGGGTACTGTGGCAACGCACGGATCTTAATAC
GGAGCTATCGCGTGTATACCGTACGGGAGAACTGCGGATTAGCTATAGCAAAAAACTACGGTGTCCCATTCGCCGTAAAG
TAACGCAGTAGGGAGGGGGGGCCGATCATGGTCCACAACCTAGGGCATGCCTCCTCGGTAAAACACTATCCCCAGAGTTG
TAAACTAGCCTGGGAGCAGGTACTTGAAGCACCTTGCATCTTTAACTTAGCTTACGATGGAGACTACCCACCCGATAATG
ACTGCTTTGGCGTGGACCTCTGGATGAAGAACGGACTTCCTTACCAGCGCGGAATTGTGGTTCATCTGGACCCAGTTCCG
ACCTGAGCATTCGGTTCGGCTAACGAATGTAAATCGGTCTGAAACAGTGATCCTCGCTGCCTATACGTTGACAGTGGTCA
AATACAACGTTAGTGGTTCTTTCTTACATCATTATCGTGCTAGCCCTGCGCTTCTCTTCCCAAATGGCTTCTAATCCTGT
ACCTGGAATCATTCTCTCAGCCCGGATCGAGTTCTGCCGGGATAACGCCGATTACGCATACTTACGTAAAAGACCAGAGG
ATTAGCACTGCGATAAGGCCGTAATGAAGGTAAGAGGGAAACAGATCATTTGGGTATATATCACAACTGTCGCCCCCTTT
AGCTGTGTAGTCATATGTCGCCAGTACGAAATATTATCCCAATGCAGTGTCCGGCCTTCGCATTTGTCACGGCATGCTTG
AAAGATAGCGGTGGGGTTGAGCAGCGTGGGCGCTCCTTCAGATCACCGCACTGTATGGCAGCTCGCTCCGGTAATAGTCT
GCACGAACCGACGCAACATCAGTATCGGGTACGATAGTTAAGAGATACGTGCAGTAGCATGCTCTCTTTGGCAGAGCGCC
CCCTCGAGCAATTTATGGCCCAAGACTCAACAGACAAGCATCGTGTGGCGATGAGTAACTATGCCAGACGAGTTGACTGG
TAGTTGTGACGCTCATTGTCTCAATCAATCGGTGGTCGTCACGGGACCAGACTGCCCCCATTTGGCTCGCTGTGAACCCG
AGACGTAATGTCAGGACTCTCTGGGGTCGTGGGAATCATCCAAGTACCCAACCCCCCGGAGTCATGGGCGCAACATCCGT
CTCAGAATGATTTTGAAGGAAGCTCTGGGAAGGTTCAATTAATGAACTGGTCGGCATAATTATTCATTCGTATCGGCTCG
ATCTGAGAGATGGATATGGAAAAATCAAGATAACGCCCATTTGACCGACCGTACCTTAAAGCAGACGCGAATTATAGCGA
GCGGTTATACCAGCAATAATTATGGGGGTAGACTTGTTCGTGTAGACAGCGTAATAATTCCGTCAGGTGCACTTTGCTGT
CTTAACCGGCCGGTAGTCGAGCGGACAGGTCCACCGCACTAGGTGGTGCTATTCGATGGTTTCATGCCACCACGCAAGGC
TAACACGGTCGCGCATATACATCCCGACAGACAAGAGTGGATGCTTCATTGATTGCTTGATAATCTCTTGTACAGGAGAT
TGTTGGCGTGTCATACCGATAAGATGCTGCCATACATAGGCAGACTGGGCCGGATTCTACAGTCGGTGGGCTGCAGCCGA
AGCTTAGTTGTGCAGGTCGTAGCGATAAGCGAGTCTTGTTTACGGTTAACCCCCGTCTCCTGCAACTATAACCGAGGGAA
TCGTGACTACCAAGAGCCCTATGAGATCCCTC
EOF
    answer = answer.gsub(/([ATGC])\n/,'\1')+"\n"
    trails.should == answer
  end
end
