require 'tempfile'
require 'bio'
require 'bio-commandeer'
require 'spec_helper'

describe 'finishm tweak' do
  path_to_script = File.join(File.dirname(__FILE__),'..','bin','finishm roundup')

  it 'should scripting test ok two scaffolds, one with a gap' do
    Dir.mktmpdir do |tmpdir|
      command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR }/tweak/1_gap_then_unscaffolded/reads.fa.gz "+
        "--genomes #{TEST_DATA_DIR}/tweak/1_gap_then_unscaffolded/scaffolds.fa --output-directory #{tmpdir}"
      Bio::Commandeer.run(command).should == ''
      output_file = File.join(tmpdir,'scaffolds.fa.scaffolds.fasta')
      File.exist?(output_file).should == true
      File.open(output_file).read.should == <<EOF
>scaffold1 scaffold random_sequence_length_5000_chopped_1-600_then_N_then_chopped_700-2000:random_sequence_length_5000_chopped_3000-5000$
TTCCGGGTGTTATGGTGTCGCCGTGTTAACTAATAACTTTGTCCGTGTCAATTGATAACGTAAACTGCCTATCTCACGTACGATCCACTACGCGCACCCGAACTTCGGAGAATTAGCAAAGGAAAGTGTATCAAGCATTTGGTAAAACAGATGGTATTCCTCAATACTGGGCTGACGCGGAAATAGCGCGAACTTATTTATCGGTACGTTAGGTGTATCTACTAAGTAAGATTTCTGATAGTTATCAGGGCGTTCTAAATTTAGTCTCACAGACCCCTGCGTATGCAGCCGCACAGCCAATGCCGATCCTTTCTAAGATAACTCCCGCAGGAAACGTGTAGATCCAAGCTTGTTCCTCGGAGTAGCAAGCTAACTTCAAGCTTACTCAAAGCAGACAAGTTTTAATAGTGCACGCCGTAACGTTCCCCGCAACGAGTATGTGATCCGGATGCGATAAACAAGCTGAGTCACCGTGACGGGGTACTAAGTAATGACATATTGCGAGCATATGCTCCACAAGAAATGTCATACAATAGCACCAATGAGCAAGTTCATATCTGTTATTATTCAGTTACTAAAAATATACTAGTAACTCGACCTGTTAGGTTATCTGCAAATCACTAGCTACTGTATCTCATAAGATTGTCAATCGCGTCATGTCCGCAACCAGGTGCGAACGTCTTGTCCCGGTATCTTGGAATTGAAAGGGACTTGCCAGTCATTAGGACACTAAACCGGATAAACCAGAAAAAAGGAATGCGCGCCGCGGAGGTGCACGATGCCAGCGCAGACAATAACGCCGGACCTTCCAGGGTTCATGGTCAAGTTAAGCGTGCGGCTGCAGCGCAAAATCGTTATCCCACCTCTTATATGCAACACCGTCGACGAAGCGAAGGATTATGAGGGTAGCTCGATAGAATGAAAGCACGTCTTGGGCGGAGGTTCGTTATGATGAAGGCGGTCTGGAGGTACGAGCCGAAAGAGGAGCCGCGTGCGACTCCGACTCGCGTAGTTGAAATCAGGGGGTTTAAACTCTACTTGCCAATTCACCTGATGTGTAACCTGAGGCTATGAGTTGCCAGAGGTCCAATATTTGCTAGTCTGGCTGAGGTTAAGCTAGTAGTTCTAACTACAGGCGGCAGGCCAATTGTGAGCCAACGCACTAGATCACGTGCATACAACCACAACACATAAACTCGCTTTAAAGTGCGGGGTGCCCCCGGTCGAACTAAGCTCTCGTCCACGTTTTGGGGGAAAAGTCCTATGGATCCTGAGACAGCGCGCCTCCACGGAGCAAAAGTTGTTGACCAATAGTCTGACCATAACAACATGTGACTGGGTAGCCCCTGGTCATCCCCCCACATTGCCGATTTGTCAACAGTTGCACTGCCTGGAGGATCATGCGTCAGGATCAAGTCTATCGCCCACGACATATGAATTTCCACTGTCCGTGCGTCGAACCACGACAGTATGTGAGACGTGTCGAAGTCCCCCCCTTAGTGAAACGGCACTTTCTTAACCAAAGATTAAGCGGCGCCTTGGAATGGTTATCCTACGAGGAGTATGTCATACTCACTCTGTTTCTAGAACAAGTCCGTGAGAATTAGGCTGTCGGAGTAGTTTAGATAAGTGTATTTTATCTTCCGAGGCTATGGCTGGTGTGAACAATTCCCCAGACTTCCGAATTTGACTTCCTCAGTTCCGGGGCTCCCCATGACCAAACTAGATGGAATAACCTACATGACCAAACTGTCGCTTCCTGTATTGTGCTCTCAAGACTATATGAGTCGAATTCCAAGGCGCTATATCGCCTATTAAGGCAAGGCAGCCTCTAGCGCTATGCATTTCGTAACGGAATTAACGCCCACACCATCCTCAATTAACGTTAGGTACTCATATCCCCCTCATATTGGGGCCAATACCCCAAGGAGTTCGGACACGATCAACCAGCGGCGTCACCGCCCCCAGTGTGCAACGTTGTGGGGGAACACGAAATATATAGTGTAAAGTTGATCTCCATTGCCCCGCAGACGAATTCGTACGAGAACAATGAGTATGGATAGCTAGACACAAACGTTGCATAAAATTCTTTAACTTAAAGAAAAAACAATCTCAGGCTACAATCTTCGTTCACAACTAACTTACCGGTCCTCCCTCAAAACATCAGGTGGACGCTTCTTCAACTTCCTCCCCATATTATCGGGCGTATGTCTATCAAAGTGCTCCGCTAGCACTCGGGAAGGACTTATGATAACTACTGATGCCACTCGGAGTCGCGTTCACATCGTTCCCTCGGTTAAGAAGCAGAGGGCGTCATTAGCATTCAGCACGATCACCTATCCTAGTCTGATGGGACATAGGTGCTTCAAGCACTCGCACATATTAGATTTGCTGCCGCTTATAGCCAATAAATTGTCTATGATATAACGTTCATAGCCATGTGCGTTACCCTAATGTTGAAGGCGTGGTGTAAAGGCCATCCGACAACGCACTTTCTGGGTGTTTCGGCTTGCTGCAACTCCCATATTCATCCCTCGCGATGTGCCCTTAACGCTGTGTCCTATGAACCGGAAGAGCTCTTGCTTTCCCTGATTAGTTTCGAAGCAGTCGTCAGGACTACCACTCTGTATGGGGGCCTGGAGGAGCTTGGGTACAGGGTACTGTCGAGGGTAAAACTCGTAGGCAAAGGAGCAATTCGCGGACCATTCAGGGCATGCTTCTCCGGCTCCTTAGCGGAGATTAAGTAGACTAAATAGAGAGTAATGATGGGTTTCAATTTGGTTTGCCGATGTTTTGGTGTGTGCTAGCGACTTGCAATCTTCAGTTCACTAAACAGATCGGGTCGCGGACTATACTTTATCCGACGAACAGTTCTCCGCCGTATATACGGGGCGAAGCGTGGCTATCGTGAGCACCAGATACAGAGATAGCGATTGGGGACACATATAAATTCAAATACGTACGGGTAGCTCACAAATGTAGGTCCCCAGGGTGCGTCGTAACCACCAGCGCTAACCGCCCGGGAGTTAGAGAGTCCAGTGGTGTGTGATCAAAGACCCGTTTAGCCGATGCCTACCACACCCGAACGGCAAACAGCGGTGTTCAACTACCGTGGCCGCCGCGTGCTTCCAGTCTTATAGTCCCTGTACCTACGGAGTGATCTACATCGAATAGGTTGTGATTGAACCGCGGCTCTCGGCACCCTAAGGCCTCTTCATTAATACCTCAATTTGGCATGAGGAGCGCTTCGCCATTCTGCTTATACATGTACCGGCTTGGGTGAGGTTGGAGAAAAAGCGACCTGTGGCGCCACGTGATGTCCTCCTAAGAGGCAGAATCCCCTCGCTTGTGGTTTTGCCGTAATCCTGGTGTAAGGTTAGGTGTACAATATCGCTGGTACTCTGATCGCCGAGATCCAGTATCGGCCCTGTGCAAAATCACACCATATTGTATAGTCAGGCCGTACAGAAATGACACCATTCGAGAGAGCCTTTCCACAAGAAATATCGGTTCTACTGTCGAGATTCCCGCCGGACTCGATCTCACGCCCGGAGGTCGGGGAACGTTTCCTTTGTGATTAGCATATGGAGACTATTTATGACTGGCGATGCTGTGGAGTCACTTAGTGGAAAGACACCTAATCGTGAGGGTACTATCAACGTGGCTGAGCCAATACATTGGATGAGTGTCCCCCCTGTCCCCCTTTCTATGTTCGTCCCGGAGGTCCCGATGTGTTTGATAGCCGCGAGGGATGATCGATGAGTACTGCCGCTGTCTTTCTGCGAGGTGCCAGCTTCCAAAAATGTGTCGGAGTCGTATCTTTCTTACGAAGGTTAGAAGTCTGAGCGCTAGATTTCTTAAATTTGCCGAGATAAAGCGCCGTGACTTTAATATGAGGATGGGAGCAACTACCTTCGCGCTCAGCATCCGTACCTTCGTGCGTTACCACAACCCCGAAGGCGTACAGGTAACCGTTCGAATTGACTACCCAAGGGCCCGGAAGTTAAATAGTAGGTTAGTGCAATGTGCGACTACTGTGGGTGTAAGTATATAATCGCCGGGACGTACAACCCTGGCAGCTTGTAGTCCAATTTCGCACATGTCGGTATAATTCTCGCTTAATCAGCATCATGGAGATCCCTTCGAGGCCAAGGGCCTAGAGAAACTAACGCGTAAACTACGCACTCTAAGGTACAGGGGTGAATCCGTAGCGACTACATTATCGCTGAAACCTCGGATCGTCGCTTTTTTCCAATCCTCAGGCGGCGAAACTTCGTAAATTGTACCAACCTGTGGCCGTGGCTAGGGTCGGTAAGATAGCGGGGAAACATGGTAAGTTACGATCGGGATGTCTGTAAGAACCAACCACGGACGCGACCGAAACCCCTACGCCATTAAAATCGGTTCTAATCCAGATTTATTCTATAATGCGCCTGTTGATCGTCGGCGGAACGAGCACGGCTGATCGACGTAGTACTCGCTTAGGTGCCCTCGGCCGTCCCCAACTTGTTTTATAGTTGTCTAAATTCTCCGTCTAGGACGTGGCCATCCGAGAGTTTTTACAACGAGAATTAGGAAACTATCGTCGCCGATTCCTTACCCTTATTGGAATGATGGGGCCGGGCTATAGTATCAGGACAGACCTGTTGACAATTAATATCTACTAGGATTGAAGCGACAGAACTCGGGTTATGACTTAACTATGTCTTCTTTATAATGACGAGACCTCAATTTGGGCGTAATGTGAGGAGCATAAGGATGTTCGTCACAAAAACAGTATGTCCGTCACACATATTCCTTATGGGTGGGTAAGCGGCTAAAATGTCTCGATCACAAACAAAGAACTGGATATCGGGGTGTATTACGGGGGGTATGCAATGTAAGCGCTGAGTAATCGCAAGAGGCTTAAAATGACGAATCTAAGTTCATTGCCTACCCTTAACGAGTATGGCTAATCGGTAGCCCTTCGCTGATGACTAAAACCTAAGCGCCGCCACAGA
EOF
    end
  end

  it 'should scripting test ok with reverse order of scaffolds' do
    answer = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/1_gap_then_unscaffolded/answer.fa").entries[0].to_biosequence.to_s
    Dir.mktmpdir do |tmpdir|
      #File.open('/tmp/in2','w') do |t|
      Tempfile.open('testing_scaffolds') do |t|
        t.puts '>seq1'
        t.puts answer[2000..-1]
        t.puts '>seq2'
        t.puts answer[0..1500]
        t.close
        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR }/tweak/1_gap_then_unscaffolded/reads.fa.gz "+
          "--genomes #{t.path} --output-directory #{tmpdir}"
        Bio::Commandeer.run command
        output_file = File.join(tmpdir,File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file).should == true
        File.open(output_file).read.should == <<EOF
>scaffold1 scaffold seq1:seq2
TCTGTGGCGGCGCTTAGGTTTTAGTCATCAGCGAAGGGCTACCGATTAGCCATACTCGTTAAGGGTAGGCAATGAACTTAGATTCGTCATTTTAAGCCTCTTGCGATTACTCAGCGCTTACATTGCATACCCCCCGTAATACACCCCGATATCCAGTTCTTTGTTTGTGATCGAGACATTTTAGCCGCTTACCCACCCATAAGGAATATGTGTGACGGACATACTGTTTTTGTGACGAACATCCTTATGCTCCTCACATTACGCCCAAATTGAGGTCTCGTCATTATAAAGAAGACATAGTTAAGTCATAACCCGAGTTCTGTCGCTTCAATCCTAGTAGATATTAATTGTCAACAGGTCTGTCCTGATACTATAGCCCGGCCCCATCATTCCAATAAGGGTAAGGAATCGGCGACGATAGTTTCCTAATTCTCGTTGTAAAAACTCTCGGATGGCCACGTCCTAGACGGAGAATTTAGACAACTATAAAACAAGTTGGGGACGGCCGAGGGCACCTAAGCGAGTACTACGTCGATCAGCCGTGCTCGTTCCGCCGACGATCAACAGGCGCATTATAGAATAAATCTGGATTAGAACCGATTTTAATGGCGTAGGGGTTTCGGTCGCGTCCGTGGTTGGTTCTTACAGACATCCCGATCGTAACTTACCATGTTTCCCCGCTATCTTACCGACCCTAGCCACGGCCACAGGTTGGTACAATTTACGAAGTTTCGCCGCCTGAGGATTGGAAAAAAGCGACGATCCGAGGTTTCAGCGATAATGTAGTCGCTACGGATTCACCCCTGTACCTTAGAGTGCGTAGTTTACGCGTTAGTTTCTCTAGGCCCTTGGCCTCGAAGGGATCTCCATGATGCTGATTAAGCGAGAATTATACCGACATGTGCGAAATTGGACTACAAGCTGCCAGGGTTGTACGTCCCGGCGATTATATACTTACACCCACAGTAGTCGCACATTGCACTAACCTACTATTTAACTTCCGGGCCCTTGGGTAGTCAATTCGAACGGTTACCTGTACGCCTTCGGGGTTGTGGTAACGCACGAAGGTACGGATGCTGAGCGCGAAGGTAGTTGCTCCCATCCTCATATTAAAGTCACGGCGCTTTATCTCGGCAAATTTAAGAAATCTAGCGCTCAGACTTCTAACCTTCGTAAGAAAGATACGACTCCGACACATTTTTGGAAGCTGGCACCTCGCAGAAAGACAGCGGCAGTACTCATCGATCATCCCTCGCGGCTATCAAACACATCGGGACCTCCGGGACGAACATAGAAAGGGGGACAGGGGGGACACTCATCCAATGTATTGGCTCAGCCACGTTGATAGTACCCTCACGATTAGGTGTCTTTCCACTAAGTGACTCCACAGCATCGCCAGTCATAAATAGTCTCCATATGCTAATCACAAAGGAAACGTTCCCCGACCTCCGGGCGTGAGATCGAGTCCGGCGGGAATCTCGACAGTAGAACCGATATTTCTTGTGGAAAGGCTCTCTCGAATGGTGTCATTTCTGTACGGCCTGACTATACAATATGGTGTGATTTTGCACAGGGCCGATACTGGATCTCGGCGATCAGAGTACCAGCGATATTGTACACCTAACCTTACACCAGGATTACGGCAAAACCACAAGCGAGGGGATTCTGCCTCTTAGGAGGACATCACGTGGCGCCACAGGTCGCTTTTTCTCCAACCTCACCCAAGCCGGTACATGTATAAGCAGAATGGCGAAGCGCTCCTCATGCCAAATTGAGGTATTAATGAAGAGGCCTTAGGGTGCCGAGAGCCGCGGTTCAATCACAACCTATTCGATGTAGATCACTCCGTAGGTACAGGGACTATAAGACTGGAAGCACGCGGCGGCCACGGTAGTTGAACACCGCTGTTTGCCGTTCGGGTGTGGTAGGCATCGGCTAAACGGGTCTTTGATCACACACCACTGGACTCTCTAACTCCCGGGCGGTTAGCGCTGGTGGTTACGACGCACCCTGGGGACCTACATTTGTGAGCTACCCGTACGTATTTGAATTTATATGTGTCCCCAATCGCTATCTCTGTATCTGGTGCTCACGATAGCCACGCTTCGCCCCGTATATACGGCGGAGAACTGTTCGTCGGATAAAGTATAGTCCGCGACCCGATCTGTTTAGTGAACTGAAGATTGCAAGTCGCTAGCACACACCAAAACATCGGCAAACCAAATTGAAACCCATCATTACTCTCTATTTAGTCTACTTAATCTCCGCTAAGGAGCCGGAGAAGCATGCCCTGAATGGTCCGCGAATTGCTCCTTTGCCTACGAGTTTTACCCTCGACAGTACCCTGTACCCAAGCTCCTCCAGGCCCCCATACAGAGTGGTAGTCCTGACGACTGCTTCGAAACTAATCAGGGAAAGCAAGAGCTCTTCCGGTTCATAGGACACAGCGTTAAGGGCACATCGCGAGGGATGAATATGGGAGTTGCAGCAAGCCGAAACACCCAGAAAGTGCGTTGTCGGATGGCCTTTACACCACGCCTTCAACATTAGGGTAACGCACATGGCTATGAACGTTATATCATAGACAATTTATTGGCTATAAGCGGCAGCAAATCTAATATGTGCGAGTGCTTGAAGCACCTATGTCCCATCAGACTAGGATAGGTGATCGTGCTGAATGCTAATGACGCCCTCTGCTTCTTAACCGAGGGAACGATGTGAACGCGACTCCGAGTGGCATCAGTAGTTATCATAAGTCCTTCCCGAGTGCTAGCGGAGCACTTTGATAGACATACGCCCGATAATATGGGGAGGAAGTTGAAGAAGCGTCCACCTGATGTTTTGAGGGAGGACCGGTAAGTTAGTTGTGAACGAAGATTGTAGCCTGAGATTGTTTTTTCTTTAAGTTAAAGAATTTTATGCAACGTTTGTGTCTAGCTATCCATACTCATTGTTCTCGTACGAATTCGTCTGCGGGGCAATGGAGATCAACTTTACACTATATATTTCGTGTTCCCCCACAACGTTGCACACTGGGGGCGGTGACGCCGCTGGTTGATCGTGTCCGAACTCCTTGGGGTATTGGCCCCAATATGAGGGGGATATGAGTACCTAACGTTAATTGAGGATGGTGTGGGCGTTAATTCCGTTACGAAATGCATAGCGCTAGAGGCTGCCTTGCCTTAATAGGCGATATAGCGCCTTGGAATTCGACTCATATAGTCTTGAGAGCACAATACAGGAAGCGACAGTTTGGTCATGTAGGTTATTCCATCTAGTTTGGTCATGGGGAGCCCCGGAACTGAGGAAGTCAAATTCGGAAGTCTGGGGAATTGTTCACACCAGCCATAGCCTCGGAAGATAAAATACACTTATCTAAACTACTCCGACAGCCTAATTCTCACGGACTTGTTCTAGAAACAGAGTGAGTATGACATACTCCTCGTAGGATAACCATTCCAAGGCGCCGCTTAATCTTTGGTTAAGAAAGTGCCGTTTCACTAAGGGGGGGACTTCGACACGTCTCACATACTGTCGTGGTTCGACGCACGGACAGTGGAAATTCATATGTCGTGGGCGATAGACTTGATCCTGACGCATGATCCTCCAGGCAGTGCAACTGTTGACAAATCGGCAATGTGGGGGGATGACCAGGGGCTACCCAGTCACATGTTGTTATGGTCAGACTATTGGTCAACAACTTTTGCTCCGTGGAGGCGCGCTGTCTCAGGATCCATAGGACTTTTCCCCCAAAACGTGGACGAGAGCTTAGTTCGACCGGGGGCACCCCGCACTTTAAAGCGAGTTTATGTGTTGTGGTTGTATGCACGTGATCTAGTGCGTTGGCTCACAATTGGCCTGCCGCCTGTAGTTAGAACTACTAGCTTAACCTCAGCCAGACTAGCAAATATTGGACCTCTGGCAACTCATAGCCTCAGGTTACACATCAGGTGAATTGGCAAGTAGAGTTTAAACCCCCTGATTTCAACTACGCGAGTCGGAGTCGCACGCGGCTCCTCTTTCGGCTCGTACCTCCAGACCGCCTTCATCATAACGAACCTCCGCCCAAGACGTGCTTTCATTCTATCGAGCTACCCTCATAATCCTTCGCTTCGTCGACGGTGTTGCATATAAGAGGTGGGATAACGATTTTGCGCTGCAGCCGCACGCTTAACTTGACCATGAACCCTGGAAGGTCCGGCGTTATTGTCTGCGCTGGCATCGTGCACCTCCGCGGCGCGCATTCCTTTTTTCTGGTTTATCCGGTTTAGTGTCCTAATGACTGGCAAGTCCCTTTCAATTCCAAGATACCGGGACAAGACGTTCGCACCTGGTTGCGGACATGACGCGATTGACAATCTTATGAGATACAGTAGCTAGTGATTTGCAGATAACCTAACAGGTCGAGTTACTAGTATATTTTTAGTAACTGAATAATAACAGATATGAACTTGCTCATTGGTGCTATTGTATGACATTTCTTGTGGAGCATATGCTCGCAATATGTCATTACTTAGTACCCCGTCACGGTGACTCAGCTTGTTTATCGCATCCGGATCACATACTCGTTGCGGGGAACGTTACGGCGTGCACTATTAAAACTTGTCTGCTTTGAGTAAGCTTGAAGTTAGCTTGCTACTCCGAGGAACAAGCTTGGATCTACACGTTTCCTGCGGGAGTTATCTTAGAAAGGATCGGCATTGGCTGTGCGGCTGCATACGCAGGGGTCTGTGAGACTAAATTTAGAACGCCCTGATAACTATCAGAAATCTTACTTAGTAGATACACCTAACGTACCGATAAATAAGTTCGCGCTATTTCCGCGTCAGCCCAGTATTGAGGAATACCATCTGTTTTACCAAATGCTTGATACACTTTCCTTTGCTAATTCTCCGAAGTTCGGGTGCGCGTAGTGGATCGTACGTGAGATAGGCAGTTTACGTTATCAATTGACACGGACAAAGTTATTAGTTAACACGGCGACACCATAACACCCGGAA
EOF
      end
    end
  end

  it 'should work at wandering and fixing multiple genomes' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
        t.puts '>seq1'
        t.puts answer2[0..1000]
        t.puts '>seq2'
        t.puts answer2[1000..-1]
        t.close

        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR }/tweak/1_gap_then_unscaffolded/reads.fa.gz,#{TEST_DATA_DIR}/tweak/2_second_genome/reads.fa.gz "+
          "--genomes #{TEST_DATA_DIR}/tweak/1_gap_then_unscaffolded/scaffolds.fa,#{t.path} --output-directory #{tmpdir}"
        Bio::Commandeer.run(command).should == ''
        output_file = File.join(tmpdir,'scaffolds.fa.scaffolds.fasta')
        File.exist?(output_file).should == true
        File.open(output_file).read.should == <<EOF
>scaffold1 scaffold random_sequence_length_5000_chopped_1-600_then_N_then_chopped_700-2000:random_sequence_length_5000_chopped_3000-5000$
TTCCGGGTGTTATGGTGTCGCCGTGTTAACTAATAACTTTGTCCGTGTCAATTGATAACGTAAACTGCCTATCTCACGTACGATCCACTACGCGCACCCGAACTTCGGAGAATTAGCAAAGGAAAGTGTATCAAGCATTTGGTAAAACAGATGGTATTCCTCAATACTGGGCTGACGCGGAAATAGCGCGAACTTATTTATCGGTACGTTAGGTGTATCTACTAAGTAAGATTTCTGATAGTTATCAGGGCGTTCTAAATTTAGTCTCACAGACCCCTGCGTATGCAGCCGCACAGCCAATGCCGATCCTTTCTAAGATAACTCCCGCAGGAAACGTGTAGATCCAAGCTTGTTCCTCGGAGTAGCAAGCTAACTTCAAGCTTACTCAAAGCAGACAAGTTTTAATAGTGCACGCCGTAACGTTCCCCGCAACGAGTATGTGATCCGGATGCGATAAACAAGCTGAGTCACCGTGACGGGGTACTAAGTAATGACATATTGCGAGCATATGCTCCACAAGAAATGTCATACAATAGCACCAATGAGCAAGTTCATATCTGTTATTATTCAGTTACTAAAAATATACTAGTAACTCGACCTGTTAGGTTATCTGCAAATCACTAGCTACTGTATCTCATAAGATTGTCAATCGCGTCATGTCCGCAACCAGGTGCGAACGTCTTGTCCCGGTATCTTGGAATTGAAAGGGACTTGCCAGTCATTAGGACACTAAACCGGATAAACCAGAAAAAAGGAATGCGCGCCGCGGAGGTGCACGATGCCAGCGCAGACAATAACGCCGGACCTTCCAGGGTTCATGGTCAAGTTAAGCGTGCGGCTGCAGCGCAAAATCGTTATCCCACCTCTTATATGCAACACCGTCGACGAAGCGAAGGATTATGAGGGTAGCTCGATAGAATGAAAGCACGTCTTGGGCGGAGGTTCGTTATGATGAAGGCGGTCTGGAGGTACGAGCCGAAAGAGGAGCCGCGTGCGACTCCGACTCGCGTAGTTGAAATCAGGGGGTTTAAACTCTACTTGCCAATTCACCTGATGTGTAACCTGAGGCTATGAGTTGCCAGAGGTCCAATATTTGCTAGTCTGGCTGAGGTTAAGCTAGTAGTTCTAACTACAGGCGGCAGGCCAATTGTGAGCCAACGCACTAGATCACGTGCATACAACCACAACACATAAACTCGCTTTAAAGTGCGGGGTGCCCCCGGTCGAACTAAGCTCTCGTCCACGTTTTGGGGGAAAAGTCCTATGGATCCTGAGACAGCGCGCCTCCACGGAGCAAAAGTTGTTGACCAATAGTCTGACCATAACAACATGTGACTGGGTAGCCCCTGGTCATCCCCCCACATTGCCGATTTGTCAACAGTTGCACTGCCTGGAGGATCATGCGTCAGGATCAAGTCTATCGCCCACGACATATGAATTTCCACTGTCCGTGCGTCGAACCACGACAGTATGTGAGACGTGTCGAAGTCCCCCCCTTAGTGAAACGGCACTTTCTTAACCAAAGATTAAGCGGCGCCTTGGAATGGTTATCCTACGAGGAGTATGTCATACTCACTCTGTTTCTAGAACAAGTCCGTGAGAATTAGGCTGTCGGAGTAGTTTAGATAAGTGTATTTTATCTTCCGAGGCTATGGCTGGTGTGAACAATTCCCCAGACTTCCGAATTTGACTTCCTCAGTTCCGGGGCTCCCCATGACCAAACTAGATGGAATAACCTACATGACCAAACTGTCGCTTCCTGTATTGTGCTCTCAAGACTATATGAGTCGAATTCCAAGGCGCTATATCGCCTATTAAGGCAAGGCAGCCTCTAGCGCTATGCATTTCGTAACGGAATTAACGCCCACACCATCCTCAATTAACGTTAGGTACTCATATCCCCCTCATATTGGGGCCAATACCCCAAGGAGTTCGGACACGATCAACCAGCGGCGTCACCGCCCCCAGTGTGCAACGTTGTGGGGGAACACGAAATATATAGTGTAAAGTTGATCTCCATTGCCCCGCAGACGAATTCGTACGAGAACAATGAGTATGGATAGCTAGACACAAACGTTGCATAAAATTCTTTAACTTAAAGAAAAAACAATCTCAGGCTACAATCTTCGTTCACAACTAACTTACCGGTCCTCCCTCAAAACATCAGGTGGACGCTTCTTCAACTTCCTCCCCATATTATCGGGCGTATGTCTATCAAAGTGCTCCGCTAGCACTCGGGAAGGACTTATGATAACTACTGATGCCACTCGGAGTCGCGTTCACATCGTTCCCTCGGTTAAGAAGCAGAGGGCGTCATTAGCATTCAGCACGATCACCTATCCTAGTCTGATGGGACATAGGTGCTTCAAGCACTCGCACATATTAGATTTGCTGCCGCTTATAGCCAATAAATTGTCTATGATATAACGTTCATAGCCATGTGCGTTACCCTAATGTTGAAGGCGTGGTGTAAAGGCCATCCGACAACGCACTTTCTGGGTGTTTCGGCTTGCTGCAACTCCCATATTCATCCCTCGCGATGTGCCCTTAACGCTGTGTCCTATGAACCGGAAGAGCTCTTGCTTTCCCTGATTAGTTTCGAAGCAGTCGTCAGGACTACCACTCTGTATGGGGGCCTGGAGGAGCTTGGGTACAGGGTACTGTCGAGGGTAAAACTCGTAGGCAAAGGAGCAATTCGCGGACCATTCAGGGCATGCTTCTCCGGCTCCTTAGCGGAGATTAAGTAGACTAAATAGAGAGTAATGATGGGTTTCAATTTGGTTTGCCGATGTTTTGGTGTGTGCTAGCGACTTGCAATCTTCAGTTCACTAAACAGATCGGGTCGCGGACTATACTTTATCCGACGAACAGTTCTCCGCCGTATATACGGGGCGAAGCGTGGCTATCGTGAGCACCAGATACAGAGATAGCGATTGGGGACACATATAAATTCAAATACGTACGGGTAGCTCACAAATGTAGGTCCCCAGGGTGCGTCGTAACCACCAGCGCTAACCGCCCGGGAGTTAGAGAGTCCAGTGGTGTGTGATCAAAGACCCGTTTAGCCGATGCCTACCACACCCGAACGGCAAACAGCGGTGTTCAACTACCGTGGCCGCCGCGTGCTTCCAGTCTTATAGTCCCTGTACCTACGGAGTGATCTACATCGAATAGGTTGTGATTGAACCGCGGCTCTCGGCACCCTAAGGCCTCTTCATTAATACCTCAATTTGGCATGAGGAGCGCTTCGCCATTCTGCTTATACATGTACCGGCTTGGGTGAGGTTGGAGAAAAAGCGACCTGTGGCGCCACGTGATGTCCTCCTAAGAGGCAGAATCCCCTCGCTTGTGGTTTTGCCGTAATCCTGGTGTAAGGTTAGGTGTACAATATCGCTGGTACTCTGATCGCCGAGATCCAGTATCGGCCCTGTGCAAAATCACACCATATTGTATAGTCAGGCCGTACAGAAATGACACCATTCGAGAGAGCCTTTCCACAAGAAATATCGGTTCTACTGTCGAGATTCCCGCCGGACTCGATCTCACGCCCGGAGGTCGGGGAACGTTTCCTTTGTGATTAGCATATGGAGACTATTTATGACTGGCGATGCTGTGGAGTCACTTAGTGGAAAGACACCTAATCGTGAGGGTACTATCAACGTGGCTGAGCCAATACATTGGATGAGTGTCCCCCCTGTCCCCCTTTCTATGTTCGTCCCGGAGGTCCCGATGTGTTTGATAGCCGCGAGGGATGATCGATGAGTACTGCCGCTGTCTTTCTGCGAGGTGCCAGCTTCCAAAAATGTGTCGGAGTCGTATCTTTCTTACGAAGGTTAGAAGTCTGAGCGCTAGATTTCTTAAATTTGCCGAGATAAAGCGCCGTGACTTTAATATGAGGATGGGAGCAACTACCTTCGCGCTCAGCATCCGTACCTTCGTGCGTTACCACAACCCCGAAGGCGTACAGGTAACCGTTCGAATTGACTACCCAAGGGCCCGGAAGTTAAATAGTAGGTTAGTGCAATGTGCGACTACTGTGGGTGTAAGTATATAATCGCCGGGACGTACAACCCTGGCAGCTTGTAGTCCAATTTCGCACATGTCGGTATAATTCTCGCTTAATCAGCATCATGGAGATCCCTTCGAGGCCAAGGGCCTAGAGAAACTAACGCGTAAACTACGCACTCTAAGGTACAGGGGTGAATCCGTAGCGACTACATTATCGCTGAAACCTCGGATCGTCGCTTTTTTCCAATCCTCAGGCGGCGAAACTTCGTAAATTGTACCAACCTGTGGCCGTGGCTAGGGTCGGTAAGATAGCGGGGAAACATGGTAAGTTACGATCGGGATGTCTGTAAGAACCAACCACGGACGCGACCGAAACCCCTACGCCATTAAAATCGGTTCTAATCCAGATTTATTCTATAATGCGCCTGTTGATCGTCGGCGGAACGAGCACGGCTGATCGACGTAGTACTCGCTTAGGTGCCCTCGGCCGTCCCCAACTTGTTTTATAGTTGTCTAAATTCTCCGTCTAGGACGTGGCCATCCGAGAGTTTTTACAACGAGAATTAGGAAACTATCGTCGCCGATTCCTTACCCTTATTGGAATGATGGGGCCGGGCTATAGTATCAGGACAGACCTGTTGACAATTAATATCTACTAGGATTGAAGCGACAGAACTCGGGTTATGACTTAACTATGTCTTCTTTATAATGACGAGACCTCAATTTGGGCGTAATGTGAGGAGCATAAGGATGTTCGTCACAAAAACAGTATGTCCGTCACACATATTCCTTATGGGTGGGTAAGCGGCTAAAATGTCTCGATCACAAACAAAGAACTGGATATCGGGGTGTATTACGGGGGGTATGCAATGTAAGCGCTGAGTAATCGCAAGAGGCTTAAAATGACGAATCTAAGTTCATTGCCTACCCTTAACGAGTATGGCTAATCGGTAGCCCTTCGCTGATGACTAAAACCTAAGCGCCGCCACAGA
EOF
        output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file2).should == true
        File.open(output_file2).read.should == <<EOF
>scaffold1 scaffold seq1:seq2
AACTTATCAACCCACAGGATGTGCGAAGCAGGATACGTTTGCGGAGCTGAAGCGGACTCCGCGCGGCCGGCAGATGTAGATGGCCTCGGCGCCCAAGTTTGGAATATGGTCAGTCCAACAAGAAAGTTTTTAAGCGCGAAGATTATGTCGCGAACTTCCTCCGCAGCGTCAGTGGTATAAGAAGACAGCGCGGGAGTTGAGGAGAACAGGAGATACCTACCGGGACACATCACCAGGCGCGTAGCTGGGCAGGTCAGCCGCTGGAGTGGGTTTATCATCTAAAACGAGGCTCCGGCATTTCGGTTAATCATAGCTCGGGGCTAGGTTGATTGTCGGAGGTCTTCTGTTCGGTCCGGCGTTAGTAATAAGCTGCCTCGGATATTGACTTCCTGGATTAGCCGATATATCTTACAGGCAGGACTTTATCAGCGGTTACCAACGCAAAATACTTTAAGAAATGGCTGACCCACGCCCTAACGCGTTACTTGGGTACACGTGTTGAAAAGCCGTCCAATCGCCCTCATATCGAATACTGGGTTCCTACATATGTGGGTGGCACGTGACCTCTCGAAGTCGCTATTGGTTAAGTACTACTATACTTCCAAATTGAACTCTCTCGAAGCTTAATCGCCATCTGCTATCGTGCCCCCCTGCTTGCGTGACCAAACGCCTAGGGATGAAATTAGAAATAAACGAATTCTCAGGGCCAAACTCTAACGACCAGCCGAGGCAGCACGCTGTGATCTTCGTGTGTTCACCATGACTAGGACACAAGGGCCGGAGCGGGACCGGCCATGCAATACTGGCCCGGCCTCTATCAAAGGTTTCTGGGCCATGGTGATACGGGTGTGTGTAGCCGATTCATTTGCTAGTCCTCAATGCCATGCGCGGAGCCTGAGTAAGGCCGTTCGTATCTGTCCACTAATCACGGGTGATTACCACCCGGGCACTAGCCGCGGTAATATCTACCTACAGCGAGAAGCCCCTCGAAGATTATCGCGACGACGTGCTGCCCCTGGGCATCCACTTGTCACTCCAGAACTGTGGTAGGTTATCCGGCAATATATAATTTTAGATACGACTAGACCGTACAGATCATGTTAATGTTACCGTCACGTCCTCTATTGGGAACATCGCACGACACCCAGCTGGACCCCGCCACCGTTACTGCGGAACTCCAGTCTTTTAGCTTGCCGCAGTGATGGACAGTACAAGTCGCAGGTGCGGGCCTGTCAGCCTCACCTTTTTCGCAACGGCAAGTTATGAGGGAATCTTGATCAAGAGGTTAAGATGAAATGCGAAGTGATTCGTGAATGTCTTCGCGTACAACCGCGCTGAGGATATAGATAGAATAACGCAATTCACTCGTCACCAGGATCCCTATAAGGGTTAAGACCTCTTACGGTTTAAAGTAATCTGTTGATGCTGCATTGTCATGACTGGGTGATTTTTAGATCCCTATAAGGACTCCTCGTATCTATAGACGGCGCCTATAAATACCACAGGCTACCCTTTGAGGTGTGACTCCCCGTATTTGAAGTGGTCCACTGCTGAATTATGGATTTTTCGAATCTACAGGATGACTACGGTCATCCACGGACCTGGCGAGTGGATTTATGCTTCTGTAAGCGATAAGGATTCGGTGGGTATTAGATGCGGCGCGCATGGTGTCCATCCTGGCCCGCCAAGCTAACGTGCCGGCGTTACGGAGTATGACGAGCATTTAGCGACGCTTCTGTCAAGGAGCCGGAAGTGGGAGTAGGCTGTTTGCCAGCGCGGGTCCCCATGCATCTCACCTGAGTACCCTTCGGACAACTGCCTCGTAGAGATTAATCTGGCAAACCTAGAGATATGCCAAGCTTTTTCACTGCCATTATAAATAAGGCTTGGGAGTTGAGTAACATATGAAAGCATCGTTCCTTCACCAGAGGTGAATTTACCACGCAAACTTGGTCTGCGTTACTTGCAAAACTGCAGGAACGGCTAAAAAGCACTGGGGCTGATCGAGTACGTTCTATGTCATGTGCCCCTTGTAAGTGCTGATATATATCCCTCTAATGGAAAGGCTACTAGGACTGCGCAAATCGCACGCTCCGTCGCACGGTAGATTCAGGCCTGATGAACGTTAATATAGGTTTTCACTCCATGTTGCGAATCTTCGGTCTCTAGACCGACTACCTTCATGACTCGGGGAAACGTAGGAAGCCGGAGCATGATGTTGTGCACTAACTCTCCCTAATCACCATGTCGAGATTAACAAGCAAAGTTCCCTGGGGGTTCCTAGCCGCACATCCCACACTTAGGTGTTGCCTCTACGTCTGAGGGACAAAAAACATAGGCCTGGTGCATGTACTAAGGATTACCTTTACTATGAGCTTGATAGGCACTTCGGCCGATCGAGGTTTAACCGGCGCGCTAGCAAAAGGTGGCGTAGTTGCGCAATTGGTCGACTTGGGCGTCTTACAACTGCCGGTTCCTCAGTAGTTCTTTCTCGTATAGGCATGTAATCACGCCACACCCCGCCACTAAGGGGTAGCCGGTCGCGATTGTAAGTGTACCGCATTTAGGTGTCAGGCGAATCGGACCTCTCCTTCGGCGTGTAAAACTATCGCTGACCCCAATAGTATTCCCGCCCCTAATTGGCTCCTCGCCCCGATCCAGGGGCGATTTGTTTGACTACACCGCTTCCACCAATACATGCACAAACTCGTAAGATTGTAGAAACATGCAGTATTTGTGCGACACCGAGCATTATTTAGGACACACCGGCCGGTGCATACCCCAACGGTGAGGCTCTCTATCGCGTATCCGACTTTGTAACTATGGCGTCCTATAACCACTAGTTGAAGTAATTCAGCCTATCTAAAGCCGGTTTGTGCGGTGTGTGACATGTTGCCATTAGACAGACTAACTCCGTTACTCAATGAAGAACTAGCGTCAAGCCAATGCGATAAGATGAACACTATGGAAGAGCAGGTCAAGTGGCTAGGCTGCGACGTG
EOF
      end
    end
  end

  it 'should deal with insufficient overhang space with a too-small contig in the middle' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
        t.puts '>seq1'
        t.puts answer2[0..1000]
        t.puts 'N'*50
        t.puts answer2[1100..1155]
        t.puts 'N'*30
        t.puts answer2[2000..-1]
        t.close

        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR}/tweak/2_second_genome/reads.fa.gz "+
          "--genomes #{t.path} --output-directory #{tmpdir}"
        Bio::Commandeer.run(command).should == ''
        output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file2).should == true
        File.open(output_file2).read.should == <<EOF
>scaffold1 scaffold seq1
AACTTATCAACCCACAGGATGTGCGAAGCAGGATACGTTTGCGGAGCTGAAGCGGACTCCGCGCGGCCGGCAGATGTAGATGGCCTCGGCGCCCAAGTTTGGAATATGGTCAGTCCAACAAGAAAGTTTTTAAGCGCGAAGATTATGTCGCGAACTTCCTCCGCAGCGTCAGTGGTATAAGAAGACAGCGCGGGAGTTGAGGAGAACAGGAGATACCTACCGGGACACATCACCAGGCGCGTAGCTGGGCAGGTCAGCCGCTGGAGTGGGTTTATCATCTAAAACGAGGCTCCGGCATTTCGGTTAATCATAGCTCGGGGCTAGGTTGATTGTCGGAGGTCTTCTGTTCGGTCCGGCGTTAGTAATAAGCTGCCTCGGATATTGACTTCCTGGATTAGCCGATATATCTTACAGGCAGGACTTTATCAGCGGTTACCAACGCAAAATACTTTAAGAAATGGCTGACCCACGCCCTAACGCGTTACTTGGGTACACGTGTTGAAAAGCCGTCCAATCGCCCTCATATCGAATACTGGGTTCCTACATATGTGGGTGGCACGTGACCTCTCGAAGTCGCTATTGGTTAAGTACTACTATACTTCCAAATTGAACTCTCTCGAAGCTTAATCGCCATCTGCTATCGTGCCCCCCTGCTTGCGTGACCAAACGCCTAGGGATGAAATTAGAAATAAACGAATTCTCAGGGCCAAACTCTAACGACCAGCCGAGGCAGCACGCTGTGATCTTCGTGTGTTCACCATGACTAGGACACAAGGGCCGGAGCGGGACCGGCCATGCAATACTGGCCCGGCCTCTATCAAAGGTTTCTGGGCCATGGTGATACGGGTGTGTGTAGCCGATTCATTTGCTAGTCCTCAATGCCATGCGCGGAGCCTGAGTAAGGCCGTTCGTATCTGTCCACTAATCACGGGTGATTACCACCCGGGCACTAGCCGCGGTAATATCTACCTACAGCGAGAAGCCCCTCGAAGATTATCGCGACGACGTGCTGCCCCTGGGCATCCACTTGTCACTCCAGAACTGTGGTAGGTTATCCGGCAATATATAATTTTAGATACGACTAGACCGTACAGATCATGTTAATGTTACCGTCACGTCCTCTATTGGGAACATCGCACGACACCCAGCTGGACCCCGCCACCGTTACTGCGGAACTCCAGTCTTTTAGCTTGCCGCAGTGATGGACAGTACAAGTCGCAGGTGCGGGCCTGTCAGCCTCACCTTTTTCGCAACGGCAAGTTATGAGGGAATCTTGATCAAGAGGTTAAGATGAAATGCGAAGTGATTCGTGAATGTCTTCGCGTACAACCGCGCTGAGGATATAGATAGAATAACGCAATTCACTCGTCACCAGGATCCCTATAAGGGTTAAGACCTCTTACGGTTTAAAGTAATCTGTTGATGCTGCATTGTCATGACTGGGTGATTTTTAGATCCCTATAAGGACTCCTCGTATCTATAGACGGCGCCTATAAATACCACAGGCTACCCTTTGAGGTGTGACTCCCCGTATTTGAAGTGGTCCACTGCTGAATTATGGATTTTTCGAATCTACAGGATGACTACGGTCATCCACGGACCTGGCGAGTGGATTTATGCTTCTGTAAGCGATAAGGATTCGGTGGGTATTAGATGCGGCGCGCATGGTGTCCATCCTGGCCCGCCAAGCTAACGTGCCGGCGTTACGGAGTATGACGAGCATTTAGCGACGCTTCTGTCAAGGAGCCGGAAGTGGGAGTAGGCTGTTTGCCAGCGCGGGTCCCCATGCATCTCACCTGAGTACCCTTCGGACAACTGCCTCGTAGAGATTAATCTGGCAAACCTAGAGATATGCCAAGCTTTTTCACTGCCATTATAAATAAGGCTTGGGAGTTGAGTAACATATGAAAGCATCGTTCCTTCACCAGAGGTGAATTTACCACGCAAACTTGGTCTGCGTTACTTGCAAAACTGCAGGAACGGCTAAAAAGCACTGGGGCTGATCGAGTACGTTCTATGTCATGTGCCCCTTGTAAGTGCTGATATATATCCCTCTAATGGAAAGGCTACTAGGACTGCGCAAATCGCACGCTCCGTCGCACGGTAGATTCAGGCCTGATGAACGTTAATATAGGTTTTCACTCCATGTTGCGAATCTTCGGTCTCTAGACCGACTACCTTCATGACTCGGGGAAACGTAGGAAGCCGGAGCATGATGTTGTGCACTAACTCTCCCTAATCACCATGTCGAGATTAACAAGCAAAGTTCCCTGGGGGTTCCTAGCCGCACATCCCACACTTAGGTGTTGCCTCTACGTCTGAGGGACAAAAAACATAGGCCTGGTGCATGTACTAAGGATTACCTTTACTATGAGCTTGATAGGCACTTCGGCCGATCGAGGTTTAACCGGCGCGCTAGCAAAAGGTGGCGTAGTTGCGCAATTGGTCGACTTGGGCGTCTTACAACTGCCGGTTCCTCAGTAGTTCTTTCTCGTATAGGCATGTAATCACGCCACACCCCGCCACTAAGGGGTAGCCGGTCGCGATTGTAAGTGTACCGCATTTAGGTGTCAGGCGAATCGGACCTCTCCTTCGGCGTGTAAAACTATCGCTGACCCCAATAGTATTCCCGCCCCTAATTGGCTCCTCGCCCCGATCCAGGGGCGATTTGTTTGACTACACCGCTTCCACCAATACATGCACAAACTCGTAAGATTGTAGAAACATGCAGTATTTGTGCGACACCGAGCATTATTTAGGACACACCGGCCGGTGCATACCCCAACGGTGAGGCTCTCTATCGCGTATCCGACTTTGTAACTATGGCGTCCTATAACCACTAGTTGAAGTAATTCAGCCTATCTAAAGCCGGTTTGTGCGGTGTGTGACATGTTGCCATTAGACAGACTAACTCCGTTACTCAATGAAGAACTAGCGTCAAGCCAATGCGATAAGATGAACACTATGGAAGAGCAGGTCAAGTGGCTAGGCTGCGACGTG
EOF
      end
    end
  end

  it 'should deal with contigs that are too small to wander' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
        t.puts '>seq1'
        t.puts answer2[0..1000]
        t.puts '>too_small'
        t.puts answer2[1100..1150]
        t.puts '>seq2'
        t.puts answer2[2000..-1]
        t.close

        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR}/tweak/2_second_genome/reads.fa.gz "+
          "--genomes #{t.path} --output-directory #{tmpdir}"
        Bio::Commandeer.run(command).should == ''
        output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file2).should == true
        File.open(output_file2).read.should == <<EOF
>scaffold1 scaffold seq1:seq2
AACTTATCAACCCACAGGATGTGCGAAGCAGGATACGTTTGCGGAGCTGAAGCGGACTCCGCGCGGCCGGCAGATGTAGATGGCCTCGGCGCCCAAGTTTGGAATATGGTCAGTCCAACAAGAAAGTTTTTAAGCGCGAAGATTATGTCGCGAACTTCCTCCGCAGCGTCAGTGGTATAAGAAGACAGCGCGGGAGTTGAGGAGAACAGGAGATACCTACCGGGACACATCACCAGGCGCGTAGCTGGGCAGGTCAGCCGCTGGAGTGGGTTTATCATCTAAAACGAGGCTCCGGCATTTCGGTTAATCATAGCTCGGGGCTAGGTTGATTGTCGGAGGTCTTCTGTTCGGTCCGGCGTTAGTAATAAGCTGCCTCGGATATTGACTTCCTGGATTAGCCGATATATCTTACAGGCAGGACTTTATCAGCGGTTACCAACGCAAAATACTTTAAGAAATGGCTGACCCACGCCCTAACGCGTTACTTGGGTACACGTGTTGAAAAGCCGTCCAATCGCCCTCATATCGAATACTGGGTTCCTACATATGTGGGTGGCACGTGACCTCTCGAAGTCGCTATTGGTTAAGTACTACTATACTTCCAAATTGAACTCTCTCGAAGCTTAATCGCCATCTGCTATCGTGCCCCCCTGCTTGCGTGACCAAACGCCTAGGGATGAAATTAGAAATAAACGAATTCTCAGGGCCAAACTCTAACGACCAGCCGAGGCAGCACGCTGTGATCTTCGTGTGTTCACCATGACTAGGACACAAGGGCCGGAGCGGGACCGGCCATGCAATACTGGCCCGGCCTCTATCAAAGGTTTCTGGGCCATGGTGATACGGGTGTGTGTAGCCGATTCATTTGCTAGTCCTCAATGCCATGCGCGGAGCCTGAGTAAGGCCGTTCGTATCTGTCCACTAATCACGGGTGATTACCACCCGGGCACTAGCCGCGGTAATATCTACCTACAGCGAGAAGCCCCTCGAAGATTATCGCGACGACGTGCTGCCCCTGGGCATCCACTTGTCACTCCAGAACTGTGGTAGGTTATCCGGCAATATATAATTTTAGATACGACTAGACCGTACAGATCATGTTAATGTTACCGTCACGTCCTCTATTGGGAACATCGCACGACACCCAGCTGGACCCCGCCACCGTTACTGCGGAACTCCAGTCTTTTAGCTTGCCGCAGTGATGGACAGTACAAGTCGCAGGTGCGGGCCTGTCAGCCTCACCTTTTTCGCAACGGCAAGTTATGAGGGAATCTTGATCAAGAGGTTAAGATGAAATGCGAAGTGATTCGTGAATGTCTTCGCGTACAACCGCGCTGAGGATATAGATAGAATAACGCAATTCACTCGTCACCAGGATCCCTATAAGGGTTAAGACCTCTTACGGTTTAAAGTAATCTGTTGATGCTGCATTGTCATGACTGGGTGATTTTTAGATCCCTATAAGGACTCCTCGTATCTATAGACGGCGCCTATAAATACCACAGGCTACCCTTTGAGGTGTGACTCCCCGTATTTGAAGTGGTCCACTGCTGAATTATGGATTTTTCGAATCTACAGGATGACTACGGTCATCCACGGACCTGGCGAGTGGATTTATGCTTCTGTAAGCGATAAGGATTCGGTGGGTATTAGATGCGGCGCGCATGGTGTCCATCCTGGCCCGCCAAGCTAACGTGCCGGCGTTACGGAGTATGACGAGCATTTAGCGACGCTTCTGTCAAGGAGCCGGAAGTGGGAGTAGGCTGTTTGCCAGCGCGGGTCCCCATGCATCTCACCTGAGTACCCTTCGGACAACTGCCTCGTAGAGATTAATCTGGCAAACCTAGAGATATGCCAAGCTTTTTCACTGCCATTATAAATAAGGCTTGGGAGTTGAGTAACATATGAAAGCATCGTTCCTTCACCAGAGGTGAATTTACCACGCAAACTTGGTCTGCGTTACTTGCAAAACTGCAGGAACGGCTAAAAAGCACTGGGGCTGATCGAGTACGTTCTATGTCATGTGCCCCTTGTAAGTGCTGATATATATCCCTCTAATGGAAAGGCTACTAGGACTGCGCAAATCGCACGCTCCGTCGCACGGTAGATTCAGGCCTGATGAACGTTAATATAGGTTTTCACTCCATGTTGCGAATCTTCGGTCTCTAGACCGACTACCTTCATGACTCGGGGAAACGTAGGAAGCCGGAGCATGATGTTGTGCACTAACTCTCCCTAATCACCATGTCGAGATTAACAAGCAAAGTTCCCTGGGGGTTCCTAGCCGCACATCCCACACTTAGGTGTTGCCTCTACGTCTGAGGGACAAAAAACATAGGCCTGGTGCATGTACTAAGGATTACCTTTACTATGAGCTTGATAGGCACTTCGGCCGATCGAGGTTTAACCGGCGCGCTAGCAAAAGGTGGCGTAGTTGCGCAATTGGTCGACTTGGGCGTCTTACAACTGCCGGTTCCTCAGTAGTTCTTTCTCGTATAGGCATGTAATCACGCCACACCCCGCCACTAAGGGGTAGCCGGTCGCGATTGTAAGTGTACCGCATTTAGGTGTCAGGCGAATCGGACCTCTCCTTCGGCGTGTAAAACTATCGCTGACCCCAATAGTATTCCCGCCCCTAATTGGCTCCTCGCCCCGATCCAGGGGCGATTTGTTTGACTACACCGCTTCCACCAATACATGCACAAACTCGTAAGATTGTAGAAACATGCAGTATTTGTGCGACACCGAGCATTATTTAGGACACACCGGCCGGTGCATACCCCAACGGTGAGGCTCTCTATCGCGTATCCGACTTTGTAACTATGGCGTCCTATAACCACTAGTTGAAGTAATTCAGCCTATCTAAAGCCGGTTTGTGCGGTGTGTGACATGTTGCCATTAGACAGACTAACTCCGTTACTCAATGAAGAACTAGCGTCAAGCCAATGCGATAAGATGAACACTATGGAAGAGCAGGTCAAGTGGCTAGGCTGCGACGTG
EOF
      end
    end
  end

  it 'should handle gaps that are too close to the end of the scaffold' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
        t.puts '>seq1'
        t.puts answer2[0..50]
        t.puts '>seq2'
        t.puts answer2[700..1155]
        t.puts '>seq3'
        t.puts answer2[2000..-1]
        t.close

        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR}/tweak/2_second_genome/reads.fa.gz "+
          "--genomes #{t.path} --output-directory #{tmpdir}"
        Bio::Commandeer.run(command).should == ''
        output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file2).should == true
        File.open(output_file2).readlines.should == [
          '>scaffold1 scaffold seq2:seq3'+"\n",
          answer2[700..-1]+"\n"
          ]
      end
    end
  end

  it 'should handle unbridgeable gaps in one scaffold' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
        input_sequence = [
          answer2[0..500],
          'N'*20,
          answer2[1000..1500],
          'N'*5,
          answer2[2000..-1],
          ].join('')

        t.puts '>seq1'
        t.puts input_sequence
        t.close

        Tempfile.open('reads_dummy') do |reads|
          100.times do
            reads.puts '>seq1'
            reads.puts answer2[0..500]
            reads.puts '>s2'
            reads.puts answer2[1000..1500]
            reads.puts '>s3'
            reads.puts answer2[2000..-1]
          end
          reads.close

          command = "#{path_to_script} --quiet --fasta #{reads.path} "+
            "--genomes #{t.path} --output-directory #{tmpdir}"
          Bio::Commandeer.run(command).should == ''
          output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
          File.exist?(output_file2).should == true
          File.open(output_file2).readlines.should == [
            '>scaffold1 scaffold seq1'+"\n",
            input_sequence+"\n"
            ]
        end
      end
    end
  end

  it 'should handle unbridgeable gaps in the second scaffold' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
      #File.open('/tmp/testing_scaffolds2','w') do |t|
        input_sequence = [
          answer2[0..500],
          'N'*20,
          answer2[600..1000]
          ].join('')
        input_sequence2 = [
          answer2[1300..1900],
          'N'*5,
          answer2[2000..-1],
          ].join('')

        t.puts '>seq1'
        t.puts input_sequence
        t.puts '>seq2'
        t.puts input_sequence2
        t.close

        Tempfile.open('reads_dummy') do |reads|
        #File.open('/tmp/reads_dummy','w') do |reads|
          100.times do
            reads.puts '>s2' #bridge the gap between the first and second sequence
            reads.puts answer2[700..1500]
          end
          reads.close

          command = "#{path_to_script} --quiet --fasta #{reads.path} "+
            "--genomes #{t.path} --output-directory #{tmpdir}"
          Bio::Commandeer.run(command).should == ''
          output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
          File.exist?(output_file2).should == true
          File.open(output_file2).readlines.should == [
            '>scaffold1 scaffold seq1:seq2'+"\n",
            [
              answer2[0..500],
              'N'*20,
              answer2[600..1900],
              'N'*5,
              answer2[2000..-1],
              ].join('')+"\n"
            ]
        end
      end
    end
  end

  it 'should handle circular contigs that are only 1 scaffold' do
    Dir.mktmpdir do |tmpdir|
      answer2 = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/2_second_genome/answer2.fa").entries[0].to_biosequence.to_s
      Tempfile.open('testing_scaffolds2') do |t|
      #File.open('/tmp/testing_scaffolds2','w') do |t|
        t.puts '>seq1'
        t.puts answer2[-100..-1]+answer2[0..400]
        t.close

        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR}/tweak/2_second_genome/reads.fa.gz "+
          "--genomes #{t.path} --output-directory #{tmpdir}"
        Bio::Commandeer.run(command).should == ''
        output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file2).should == true
        File.open(output_file2).readlines.should == [
          '>scaffold1 circular seq1'+"\n",
          answer2[-100..-1]+answer2[0...-100]+"\n"
          ]#known bug
      end
    end
  end

  it 'should not wander when --gapfill-only is specified' do
    Dir.mktmpdir do |tmpdir|
      command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR }/tweak/1_gap_then_unscaffolded/reads.fa.gz "+
        "--genomes #{TEST_DATA_DIR}/tweak/1_gap_then_unscaffolded/scaffolds.fa --output-directory #{tmpdir} --gapfill-only"
      Bio::Commandeer.run(command).should == ''
      output_file = File.join(tmpdir,'scaffolds.fa.scaffolds.fasta')
      File.exist?(output_file).should == true
      File.open(output_file).read.should == <<EOF
>scaffold1 scaffold random_sequence_length_5000_chopped_1-600_then_N_then_chopped_700-2000
TTCCGGGTGTTATGGTGTCGCCGTGTTAACTAATAACTTTGTCCGTGTCAATTGATAACGTAAACTGCCTATCTCACGTACGATCCACTACGCGCACCCGAACTTCGGAGAATTAGCAAAGGAAAGTGTATCAAGCATTTGGTAAAACAGATGGTATTCCTCAATACTGGGCTGACGCGGAAATAGCGCGAACTTATTTATCGGTACGTTAGGTGTATCTACTAAGTAAGATTTCTGATAGTTATCAGGGCGTTCTAAATTTAGTCTCACAGACCCCTGCGTATGCAGCCGCACAGCCAATGCCGATCCTTTCTAAGATAACTCCCGCAGGAAACGTGTAGATCCAAGCTTGTTCCTCGGAGTAGCAAGCTAACTTCAAGCTTACTCAAAGCAGACAAGTTTTAATAGTGCACGCCGTAACGTTCCCCGCAACGAGTATGTGATCCGGATGCGATAAACAAGCTGAGTCACCGTGACGGGGTACTAAGTAATGACATATTGCGAGCATATGCTCCACAAGAAATGTCATACAATAGCACCAATGAGCAAGTTCATATCTGTTATTATTCAGTTACTAAAAATATACTAGTAACTCGACCTGTTAGGTTATCTGCAAATCACTAGCTACTGTATCTCATAAGATTGTCAATCGCGTCATGTCCGCAACCAGGTGCGAACGTCTTGTCCCGGTATCTTGGAATTGAAAGGGACTTGCCAGTCATTAGGACACTAAACCGGATAAACCAGAAAAAAGGAATGCGCGCCGCGGAGGTGCACGATGCCAGCGCAGACAATAACGCCGGACCTTCCAGGGTTCATGGTCAAGTTAAGCGTGCGGCTGCAGCGCAAAATCGTTATCCCACCTCTTATATGCAACACCGTCGACGAAGCGAAGGATTATGAGGGTAGCTCGATAGAATGAAAGCACGTCTTGGGCGGAGGTTCGTTATGATGAAGGCGGTCTGGAGGTACGAGCCGAAAGAGGAGCCGCGTGCGACTCCGACTCGCGTAGTTGAAATCAGGGGGTTTAAACTCTACTTGCCAATTCACCTGATGTGTAACCTGAGGCTATGAGTTGCCAGAGGTCCAATATTTGCTAGTCTGGCTGAGGTTAAGCTAGTAGTTCTAACTACAGGCGGCAGGCCAATTGTGAGCCAACGCACTAGATCACGTGCATACAACCACAACACATAAACTCGCTTTAAAGTGCGGGGTGCCCCCGGTCGAACTAAGCTCTCGTCCACGTTTTGGGGGAAAAGTCCTATGGATCCTGAGACAGCGCGCCTCCACGGAGCAAAAGTTGTTGACCAATAGTCTGACCATAACAACATGTGACTGGGTAGCCCCTGGTCATCCCCCCACATTGCCGATTTGTCAACAGTTGCACTGCCTGGAGGATCATGCGTCAGGATCAAGTCTATCGCCCACGACATATGAATTTCCACTGTCCGTGCGTCGAACCACGACAGTATGTGAGACGTGTCGAAGTCCCCCCCTTAGTGAAACGGCACTTTCTTAACCAAAGATTAAGCGGCGCCTTGGAATGGTTATCCTACGAGGAGTATGTCATACTCACTCTGTTTCTAGAACAAGTCCGTGAGAATTAGGCTGTCGGAGTAGTTTAGATAAGTGTATTTTATCTTCCGAGGCTATGGCTGGTGTGAACAATTCCCCAGACTTCCGAATTTGACTTCCTCAGTTCCGGGGCTCCCCATGACCAAACTAGATGGAATAACCTACATGACCAAACTGTCGCTTCCTGTATTGTGCTCTCAAGACTATATGAGTCGAATTCCAAGGCGCTATATCGCCTATTAAGGCAAGGCAGCCTCTAGCGCTATGCATTTCGTAACGGAATTAACGCCCACACCATCCTCAATTAACGTTAGGTACTCATATCCCCCTCATATTGGGGCCAATACCCCAAGGAGTTCGGACACGATCAACCAGCGGCGTCACCGCCCCCAGTGTGCAACGTTGTGGGGGAACACGAAATATAT
>scaffold2 scaffold random_sequence_length_5000_chopped_3000-5000$
TAACCACCAGCGCTAACCGCCCGGGAGTTAGAGAGTCCAGTGGTGTGTGATCAAAGACCCGTTTAGCCGATGCCTACCACACCCGAACGGCAAACAGCGGTGTTCAACTACCGTGGCCGCCGCGTGCTTCCAGTCTTATAGTCCCTGTACCTACGGAGTGATCTACATCGAATAGGTTGTGATTGAACCGCGGCTCTCGGCACCCTAAGGCCTCTTCATTAATACCTCAATTTGGCATGAGGAGCGCTTCGCCATTCTGCTTATACATGTACCGGCTTGGGTGAGGTTGGAGAAAAAGCGACCTGTGGCGCCACGTGATGTCCTCCTAAGAGGCAGAATCCCCTCGCTTGTGGTTTTGCCGTAATCCTGGTGTAAGGTTAGGTGTACAATATCGCTGGTACTCTGATCGCCGAGATCCAGTATCGGCCCTGTGCAAAATCACACCATATTGTATAGTCAGGCCGTACAGAAATGACACCATTCGAGAGAGCCTTTCCACAAGAAATATCGGTTCTACTGTCGAGATTCCCGCCGGACTCGATCTCACGCCCGGAGGTCGGGGAACGTTTCCTTTGTGATTAGCATATGGAGACTATTTATGACTGGCGATGCTGTGGAGTCACTTAGTGGAAAGACACCTAATCGTGAGGGTACTATCAACGTGGCTGAGCCAATACATTGGATGAGTGTCCCCCCTGTCCCCCTTTCTATGTTCGTCCCGGAGGTCCCGATGTGTTTGATAGCCGCGAGGGATGATCGATGAGTACTGCCGCTGTCTTTCTGCGAGGTGCCAGCTTCCAAAAATGTGTCGGAGTCGTATCTTTCTTACGAAGGTTAGAAGTCTGAGCGCTAGATTTCTTAAATTTGCCGAGATAAAGCGCCGTGACTTTAATATGAGGATGGGAGCAACTACCTTCGCGCTCAGCATCCGTACCTTCGTGCGTTACCACAACCCCGAAGGCGTACAGGTAACCGTTCGAATTGACTACCCAAGGGCCCGGAAGTTAAATAGTAGGTTAGTGCAATGTGCGACTACTGTGGGTGTAAGTATATAATCGCCGGGACGTACAACCCTGGCAGCTTGTAGTCCAATTTCGCACATGTCGGTATAATTCTCGCTTAATCAGCATCATGGAGATCCCTTCGAGGCCAAGGGCCTAGAGAAACTAACGCGTAAACTACGCACTCTAAGGTACAGGGGTGAATCCGTAGCGACTACATTATCGCTGAAACCTCGGATCGTCGCTTTTTTCCAATCCTCAGGCGGCGAAACTTCGTAAATTGTACCAACCTGTGGCCGTGGCTAGGGTCGGTAAGATAGCGGGGAAACATGGTAAGTTACGATCGGGATGTCTGTAAGAACCAACCACGGACGCGACCGAAACCCCTACGCCATTAAAATCGGTTCTAATCCAGATTTATTCTATAATGCGCCTGTTGATCGTCGGCGGAACGAGCACGGCTGATCGACGTAGTACTCGCTTAGGTGCCCTCGGCCGTCCCCAACTTGTTTTATAGTTGTCTAAATTCTCCGTCTAGGACGTGGCCATCCGAGAGTTTTTACAACGAGAATTAGGAAACTATCGTCGCCGATTCCTTACCCTTATTGGAATGATGGGGCCGGGCTATAGTATCAGGACAGACCTGTTGACAATTAATATCTACTAGGATTGAAGCGACAGAACTCGGGTTATGACTTAACTATGTCTTCTTTATAATGACGAGACCTCAATTTGGGCGTAATGTGAGGAGCATAAGGATGTTCGTCACAAAAACAGTATGTCCGTCACACATATTCCTTATGGGTGGGTAAGCGGCTAAAATGTCTCGATCACAAACAAAGAACTGGATATCGGGGTGTATTACGGGGGGTATGCAATGTAAGCGCTGAGTAATCGCAAGAGGCTTAAAATGACGAATCTAAGTTCATTGCCTACCCTTAACGAGTATGGCTAATCGGTAGCCCTTCGCTGATGACTAAAACCTAAGCGCCGCCACAGA
EOF
    #not the right answer
    end
  end

  it 'should handle a simple variant in the gap' do
    Dir.mktmpdir do |tmpdir|
      command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR }/tweak/3_variant/reads.fa.gz "+
        "--genomes #{TEST_DATA_DIR}/tweak/3_variant/with_gaps.fa --output-directory #{tmpdir}"
      Bio::Commandeer.run(command).should == ''
      output_file = File.join(tmpdir,'with_gaps.fa.scaffolds.fasta')
      File.exist?(output_file).should == true
      File.open(output_file).read.should == <<EOF
>scaffold1 scaffold random_sequence_length_with_gaps
AATGCACATCGACTATATTTAGGCGTCAGGCCTCGCGTCTGAGGGGATAGCACCATTATAGATGGAAAGTGACTGCTGATACGGAGTGCTGAGTTGTAGTGCGAGAGGCAGCCAAGTGTCGAGAATGTCGGAACGTTGTGACATAGTCGATGTACGTTCATCGAAGCAAGAGCCTAAAGACCGTCCGCTATGACTATTGGGCGAGGACCGGCCGAATGTTAAACATCCGATACAGCACGTACAAGGTCGCTCACCGAAGGCGCAAGATATTTTCCGCGATTGAAAAGTAACCACTTCCACGCAATTGAGGCGAAACCAACTAGCAGCTGCTCCCACTGTCGTCCATTGCCGTCAGGGGGATAAGCTCCATGCTACGTGGAACTATTGGGACCAGGTCGGTACACTCGTACCATGCATACTGGCGCGGGTGACGTTGGCCCGACGCGGACGACGTTTGTTCAGATACCGTGCAGTTACAATCCCATGTAAGCGATTCCCGGGGTTGAAATGCTTCCCGGCATACTCTGACGAAGATGCTCGAGTTCCAAGGTCAATCCGTAGCATTCGGGGATATGCGTCTGCTTCAGACAGGTCCTCCTCTCATTCACCGCTAGCGGGTCGTAAGGGGGAGTAAAGTTCGTGTCCCCAGGATGGGAGGAGCACACTCATCCCTGAGGGAAGCTAGGCCCAATCTGGACTTCCGAGCATCATACAATTTGAAAGGCCTGCAGGTCCCCAAGTCCGCCTCTGCCTGTGTTATAAAGTGGCCTACTATGCAGGACAGGGTCAAAAGGGCCCAGTCCGGGAACCAGAACCTTGAGGCCCCCGTGGCGTACGCCCCAAGCCCGCCTCCAGGGCGGCGCTGTTTTATTCTGACGGCTTTGATCGGCGAACACTGCCTGGTTAGGCACTGAATATAAAAATTCAGACACTGCCCTCCACTGAGTGACCAATCGAACATTCGTTGAGCATTGGCGCTTGTTTTCCCTTAGATTCTACC
EOF
      File.open(File.join(tmpdir,'with_gaps.fa.vcf')).readlines.should == [
        %w(#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO).join("\t")+"\n",
        %w(scaffold1	485	.	.	GGGGG	20	PASS	finishm).join("\t")+"\n"
        ]
    end
  end

  it 'should handle variants on the reverse strand' do
    answer = Bio::FlatFile.open("#{TEST_DATA_DIR}/tweak/3_variant/answer.fa").entries[0].to_biosequence.to_s
    Dir.mktmpdir do |tmpdir|
      #Tempfile.open('testing_scaffolds2') do |t|
        File.open('/tmp/ta2','w') do |t|
        t.puts '>seq1'
        t.puts answer[0..200]
        t.puts '>seq2'
        t.puts Bio::Sequence::NA.new(answer[250..400]+'N'*50+answer[600..-1]).reverse_complement.to_s.upcase
        t.close

        command = "#{path_to_script} --quiet --fasta-gz #{TEST_DATA_DIR }/tweak/3_variant/reads.fa.gz "+
            "--genomes #{t.path} --output-directory #{tmpdir} --overhang 60"
        Bio::Commandeer.run(command).should == ''
        output_file2 = File.join(tmpdir, File.basename(t.path)+'.scaffolds.fasta')
        File.exist?(output_file2).should == true
        File.open(output_file2).read.should == <<EOF
>scaffold1 scaffold seq1:seq2
AATGCACATCGACTATATTTAGGCGTCAGGCCTCGCGTCTGAGGGGATAGCACCATTATAGATGGAAAGTGACTGCTGATACGGAGTGCTGAGTTGTAGTGCGAGAGGCAGCCAAGTGTCGAGAATGTCGGAACGTTGTGACATAGTCGATGTACGTTCATCGAAGCAAGAGCCTAAAGACCGTCCGCTATGACTATTGGGCGAGGACCGGCCGAATGTTAAACATCCGATACAGCACGTACAAGGTCGCTCACCGAAGGCGCAAGATATTTTCCGCGATTGAAAAGTAACCACTTCCACGCAATTGAGGCGAAACCAACTAGCAGCTGCTCCCACTGTCGTCCATTGCCGTCAGGGGGATAAGCTCCATGCTACGTGGAACTATTGGGACCAGGTCGGTACACTCGTACCATGCATACTGGCGCGGGTGACGTTGGCCCGACGCGGACGACGTTTGTTCAGATACCGTGCAGTTACAATCCCATGTAAGCGATTCCCGGGGTTGAAATGCTTCCCGGCATACTCTGACGAAGATGCTCGAGTTCCAAGGTCAATCCGTAGCATTCGGGGATATGCGTCTGCTTCAGACAGGTCCTCCTCTCATTCACCGCTAGCGGGTCGTAAGGGGGAGTAAAGTTCGTGTCCCCAGGATGGGAGGAGCACACTCATCCCTGAGGGAAGCTAGGCCCAATCTGGACTTCCGAGCATCATACAATTTGAAAGGCCTGCAGGTCCCCAAGTCCGCCTCTGCCTGTGTTATAAAGTGGCCTACTATGCAGGACAGGGTCAAAAGGGCCCAGTCCGGGAACCAGAACCTTGAGGCCCCCGTGGCGTACGCCCCAAGCCCGCCTCCAGGGCGGCGCTGTTTTATTCTGACGGCTTTGATCGGCGAACACTGCCTGGTTAGGCACTGAATATAAAAATTCAGACACTGCCCTCCACTGAGTGACCAATCGAACATTCGTTGAGCATTGGCGCTTGTTTTCCCTTAGATTCTACC
EOF
        File.open(File.join(tmpdir, File.basename(t.path)+'.vcf')).readlines.should == [
          %w(#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO).join("\t")+"\n",
          %w(scaffold1	485	.	.	GGGGG	20	PASS	finishm).join("\t")+"\n"
          ]# need contig_printer to give an offset that can be added to each variant
      end
    end
  end


  it 'should handle circular scaffolds made up of multiple input scaffolds and are on different nodes' do
    fail
  end

  it 'should handle circular scaffolds made up of multiple input scaffolds and are on the same velvet node' do
    fail #known bug
  end
end
